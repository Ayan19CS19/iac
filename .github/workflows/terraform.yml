name: Cloudcore IAC

on:
    push:
      branches: 
        - master
      paths: 
        - terraform/**
    pull_request:
      branches: 
        - master
      paths: 
        - terraform/**
    workflow_dispatch:
      inputs:
        action:
          description: 'Action to perform (apply or destroy)'
          required: true
          default: 'apply'
          type: choice
          options:
            - apply
            - destroy

env:
    # credentials for deployment to AWS
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # S3 bucket for the terraform state. 
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF }}
    AWS_REGION: us-east-1

jobs:
    terraform:
        name: "Apply or Destroy Terraform code"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./terraform
        steps:
        - name: Checkout source code 
          uses: actions/checkout@v4

        - name: Setup Terraform with specified version on the runner
          uses: hashicorp/setup-terraform@v3

        - name: Terraform Init
          id: init
          run: terraform init -backend-config "bucket=$BUCKET_TF_STATE"

        - name: Terraform Format
          id: fmt
          run: terraform fmt -check
          continue-on-error: true 

        - name: Terraform Validate
          id: validate
          run: terraform validate

        - name: Terraform Plan
          id: plan
          if: github.event.inputs.action == 'apply'
          run: terraform plan -no-color -input=false -out planfile
          continue-on-error: true 

        - name: Terraform Plan Status 
          if: steps.plan.outcome == 'failure' && github.event.inputs.action == 'apply'
          run: exit 1

        - name: Terraform Apply
          id: apply
          if: github.event.inputs.action == 'apply' && github.ref == 'refs/heads/master' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false -parallelism=1 planfile

        - name: Terraform Destroy
          id: destroy
          if: github.event.inputs.action == 'destroy'
          run: terraform destroy -auto-approve -input=false
